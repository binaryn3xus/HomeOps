---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/helmrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: teleport
  namespace: teleport
spec:
  interval: 1h
  url: https://charts.releases.teleport.dev
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app teleport
spec:
  interval: 15m
  chart:
    spec:
      chart: teleport-cluster
      version: 18.2.2
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: teleport
        namespace: teleport

  values:
    acme: false

    auth:
      annotations:
        deployment:
          reloader.stakater.com/auto: 'true'
      teleportConfig:
        auth_service:
          client_idle_timeout: 2h
          client_idle_timeout_message: Connection closed after 2hours without activity
          session_recording: 'off'
        kubernetes_service:
          enabled: false
      extraVolumes:
        - name: intermediary-ca-cert
          secret:
            secretName: teleport-intermediary-ca-secret
            defaultMode: 0440
            items:
              - key: ca.crt
                path: ca.crt
      extraVolumeMounts:
        - name: intermediary-ca-cert
          mountPath: /etc/teleport-backend/secrets/core/server

    authentication:
      type: github

    chartMode: standalone
    clusterName: teleport.unscfleet.com
    enterprise: false

    kubeClusterName: "HomeOpsCluster"

    log:
      extraFields: ["timestamp", "level", "component", "caller"]
      format: text
      level: DEBUG
      output: stderr

    operator:
      enabled: true
      installCRDs: "dynamic"

    persistence:
      enabled: true
      existingClaimName: teleport

    podMonitor:
      additionalLabels:
        prometheus: default
      enabled: true
      interval: 30s

    podSecurityPolicy:
      enabled: true

    proxy:
      annotations:
        service:
          coredns.io/hostname: teleport.unscfleet.com
        deployment:
          reloader.stakater.com/auto: 'true'
      teleportConfig:
        proxy_service:
          trust_x_forwarded_for: true
          https_keypairs:
            - cert_file: /etc/teleport/secrets/serving-certs/public/tls.crt
              key_file: /etc/teleport/secrets/serving-certs/public/tls.key
            - cert_file: /etc/teleport/secrets/serving-certs/internal/tls.crt
              key_file: /etc/teleport/secrets/serving-certs/internal/tls.key
        kubernetes_service:
          enabled: false
      extraVolumes:
        - name: teleport-proxy-public-cert
          secret:
            secretName: teleport-proxy-public-cert
            defaultMode: 0440
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
        - name: teleport-proxy-internal-cert
          secret:
            secretName: teleport-proxy-internal-cert
            defaultMode: 0440
      extraVolumeMounts:
        - name: teleport-proxy-public-cert
          mountPath: /etc/teleport/secrets/serving-certs/public
        - name: teleport-proxy-internal-cert
          mountPath: /etc/teleport/secrets/serving-certs/internal
        # Proxy will fail to start when the serving cert is not inherently trusted
        - name: teleport-proxy-internal-cert
          mountPath: /etc/ssl/certs/ca.crt
          subPath: ca.crt

    proxyListenerMode: multiplex
    proxyProtocol: "off"

    publicAddr:
      - teleport.unscfleet.com:443
      - teleport.teleport.svc:443
      - teleport.teleport.svc.cluster.local:443

    rbac:
      create: true

    service:
      type: LoadBalancer
      # annotations:
      #   lbipam.cilium.io/ips: "10.0.30.42"
      spec:
        loadBalancerIP: 10.0.30.42

    serviceAccount:
      create: true

    validateConfigOnDeploy: true
