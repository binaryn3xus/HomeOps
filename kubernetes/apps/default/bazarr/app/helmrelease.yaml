---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bazarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # dependsOn:
  #   - name: rook-ceph-cluster
  #     namespace: rook-ceph
  #   - name: volsync
  #     namespace: volsync
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 2Gi
              storageClass: ceph-block
              globalMounts:
                - path: /config
              labels:
                snapshot.home.arpa/enabled: "true"
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [ 100 ]
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.3.1@sha256:840242bb1dfb337e5bfa579af039738bbf9948f6f33deecf451ebdd9ca509e31
            env:
              TZ: "${TIMEZONE}"
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: 6767
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "bazarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: bazarr-tls
    persistence:
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      media:
        enabled: true
        type: nfs
        server: ${HOME_NAS_IP}
        path: /volume1/Media/
        mountPath: /media
        readOnly: true

