---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 1h
  timeout: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2025-07-23T15-54-02Z
            env:
              TZ: "America/New_York"
              MINIO_UPDATE: "off"
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_BROWSER_REDIRECT_URL: "https://minio.unscfleet.com"
              MINIO_SERVER_URL: "https://s3.unscfleet.com"
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: &api-port 9000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi

    defaultPodOptions:
      securityContext:
        runAsUser: 1024
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000

    route:
      main:
        hostnames: ["minio.unscfleet.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            port: 443
        rules:
          - backendRefs:
              - name: minio
                port: 9001
      s3:
        hostnames: ["s3.unscfleet.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            port: 443
        rules:
          - backendRefs:
              - name: minio
                port: 9000

    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s

    persistence:
      media:
        existingClaim: minio-nfs
        globalMounts:
          - path: /data
