---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: minio
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-01-01T16-36-33Z
            env:
              TZ: "${TIMEZONE}"
              MINIO_UPDATE: "off"
              #MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
              #MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_DOMAIN}"
              MINIO_SERVER_URL: "https://s3.${SECRET_DOMAIN}"
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: &api-port 9000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 750Mi
        pod:
          securityContext:
            runAsUser: 1024
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: &console-port 9001
          api:
            enabled: true
            port: *api-port
    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        hosts:
          - host: &console-host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *console-port
        tls:
          - hosts:
              - *console-host
            secretName: minio-main-tls
      s3:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
          nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
        hosts:
          - host: &api-host s3.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: s3
                  port: *api-port
        tls:
          - hosts:
              - *api-host
            secretName: minio-s3-tls
    persistence:
      media:
        existingClaim: minio-nfs
        globalMounts:
          - path: /data
