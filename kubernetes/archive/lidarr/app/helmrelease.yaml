---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/lidarr
      tag: 1.1.4.3027@sha256:d7e06edaee3b2227a0dcbf170a95d26595b0d10655d5e084c45b859f175a0672
    env:
      TZ: "${TIMEZONE}"
      LIDARR__INSTANCE_NAME: Lidarr
      LIDARR__PORT: &port 80
      LIDARR__LOG_LEVEL: info
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          hajimari.io/icon: mdi:headphones
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.unscfleet.com/css/base/lidarr/space-gray.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "lidarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: lidarr-tls
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 2Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: ${HOME_NAS_IP}
        path: /volume1/Media/
        mountPath: /media
      downloads:
        enabled: true
        type: nfs
        server: ${HOME_NAS_IP}
        path: /volume1/Media/Downloads/
        mountPath: /downloads
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
