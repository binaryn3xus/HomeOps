---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:

  list:
    desc: List Azure Keyvault Secret Names
    cmds:
      - az keyvault secret list --vault-name {{.vault}} | jq -r .[].name
    vars:
      vault: '{{.vault | default "K8sHomeOpsKeyVault"}}'

  show:
    desc: Show Azure Keyvault Secret Value
    cmds:
      - az keyvault secret show --vault-name {{.vault}} --name {{.keyname}} | jq -r .value
    vars:
      vault: '{{.vault | default "K8sHomeOpsKeyVault"}}'
      keyname: '{{ or .keyname (fail "Argument (keyname) is required") }}'

  set:
    desc: Set Azure Keyvault Secret Value
    cmds:
      - az keyvault secret set --vault-name {{.vault}} --name {{.keyname}} --value {{.value}} | jq -r .value
    vars:
      vault: '{{.vault | default "K8sHomeOpsKeyVault"}}'
      keyname: '{{ or .keyname (fail "Argument (keyname) is required") }}'
      value: '{{ or .value (fail "Argument (value) is required") }}'

  delete:
    desc: Delete Azure Keyvault Secret
    cmds:
      - az keyvault secret delete --vault-name {{.vault}} --name {{.keyname}} | jq -r .value
    vars:
      vault: '{{.vault | default "K8sHomeOpsKeyVault"}}'
      keyname: '{{ or .keyname (fail "Argument (keyname) is required") }}'
      
  purge:
    desc: PERMANENTLY delete Azure Keyvault Secret
    cmds:
      - az keyvault secret purge --vault-name {{.vault}} --name {{.keyname}} | jq -r .value
    vars:
      vault: '{{.vault | default "K8sHomeOpsKeyVault"}}'
      keyname: '{{ or .keyname (fail "Argument (keyname) is required") }}'