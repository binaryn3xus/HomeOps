---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

vars:
  MAKEJINJA_CONFIG_FILE: '{{.ROOT_DIR}}/makejinja.toml'
  TEMPLATE_DIR: '{{.ROOT_DIR}}/templates'
  TEMPLATE_CONFIG_FILE: '{{.ROOT_DIR}}/config.yaml'
  TEMPLATE_RESOURCES_DIR: '{{.ROOT_DIR}}/.taskfiles/template/resources'

tasks:

  :init:
    desc: Initialize configuration files
    cmd: mv {{.TEMPLATE_CONFIG_FILE | replace ".yaml" ".sample.yaml"}} {{.TEMPLATE_CONFIG_FILE}}
    status:
      - test -f {{.TEMPLATE_CONFIG_FILE}}

  :configure:
    desc: Render and validate configuration files
    prompt: Any conflicting files in the kubernetes directory will be overwritten... continue?
    cmds:
      - task: render-configs
      - task: encrypt-secrets
      - task: validate-kubernetes-config
      - task: validate-talos-config
    preconditions:
      - msg: |
          An existing Age key interferes with age key in this repository.
          Rename or delete ~/.config/sops/age/keys.txt
        sh: '! test -f ~/.config/sops/age/keys.txt'

  generate-age-key:
    desc: Create the Sops Age key
    cmd: age-keygen --output {{.SOPS_AGE_KEY_FILE}}
    status:
      - test -f {{.SOPS_AGE_KEY_FILE}}
    preconditions:
      - which age-keygen

  render-configs:
    desc: Template the configuration files
    cmd: makejinja
    env:
      PYTHONDONTWRITEBYTECODE: '1'
    preconditions:
      - test -f {{.TEMPLATE_CONFIG_FILE}}
      - test -f {{.TEMPLATE_DIR}}/scripts/plugin.py
      - test -f {{.MAKEJINJA_CONFIG_FILE}}
      - which makejinja

  encrypt-secrets:
    desc: Encrypt secrets with Sops
    cmds:
      - for: { var: SECRET_FILES }
        cmd: |
          if sops filestatus "{{.ITEM}}" | jq --exit-status ".encrypted == false" &>/dev/null; then
              sops --encrypt --in-place "{{.ITEM}}"
          fi
    vars:
      SECRET_FILES:
        sh: find "{{.KUBERNETES_DIR}}" -type f -name "*.sops.*"
    preconditions:
      - test -f {{.SOPS_AGE_KEY_FILE}}
      - test -f {{.ROOT_DIR}}/.sops.yaml
      - which sops

  validate-kubernetes-config:
    desc: Validate Kubernetes manifests with kubeconform
    cmd: bash {{.TEMPLATE_RESOURCES_DIR}}/kubeconform.sh {{.KUBERNETES_DIR}}
    preconditions:
      - test -f {{.TEMPLATE_RESOURCES_DIR}}/kubeconform.sh
      - which kubeconform

  validate-talos-config:
    desc: Validate the Talhelper config
    dir: "{{.TALHELPER_DIR}}"
    cmd: talhelper validate talconfig {{.TALHELPER_DIR}}/talconfig.yaml
    preconditions:
      - test -f {{.TALHELPER_DIR}}/talconfig.yaml
      - which talhelper

  debug:
    desc: Gather common resources in your cluster
    cmds:
      - for: { var: RESOURCE }
        cmd: kubectl get {{.ITEM}} {{.CLI_ARGS | default "-A"}}
    vars:
      RESOURCE: >-
        nodes
        gitrepositories
        kustomizations
        helmrepositories
        helmreleases
        certificates
        certificaterequests
        ingresses
        pods
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which kubectl

  tidy:
    desc: Archive template related files and directories
    prompt: All files and directories related to the templating process will be archived... continue?
    cmds:
      - mkdir -p {{.TIDY_FOLDER}}
      - rm -rf {{.ROOT_DIR}}/.github/tests
      - rm -rf {{.ROOT_DIR}}/.github/workflows/e2e.yaml
      - rm -rf {{.ROOT_DIR}}/.github/workflows/mise.yaml
      - |
        {{.SED}} -i 's/(..\.j2)\?//g' {{.ROOT_DIR}}/.github/renovate.json5
      - mv {{.TEMPLATE_DIR}} {{.TIDY_FOLDER}}/templates
      - mv {{.MAKEJINJA_CONFIG_FILE}} {{.TIDY_FOLDER}}/makejinja.toml
      - mv {{.ROOT_DIR}}/requirements.txt {{.TIDY_FOLDER}}/requirements.txt
      - mv {{.TEMPLATE_CONFIG_FILE}} {{.TIDY_FOLDER}}/config.yaml
      - |
        {{.SED}} -i '/template:/d' {{.ROOT_DIR}}/Taskfile.yaml
      - mv {{.ROOT_DIR}}/.taskfiles/template {{.TIDY_FOLDER}}/.taskfiles/
    vars:
      TIDY_FOLDER: '{{.PRIVATE_DIR}}/{{now | unixEpoch}}'
      SED:
        sh: which gsed || which sed
    preconditions:
      - test -d {{.ROOT_DIR}}/.github/tests
      - test -d {{.ROOT_DIR}}/.taskfiles/template
      - test -d {{.TEMPLATE_DIR}}
      - test -f {{.MAKEJINJA_CONFIG_FILE}}
      - test -f {{.ROOT_DIR}}/.github/renovate.json5
      - test -f {{.ROOT_DIR}}/requirements.txt
